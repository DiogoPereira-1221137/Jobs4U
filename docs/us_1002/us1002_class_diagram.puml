@startuml

title "US1002 - Register a job opening" Class Diagram


class JobOpening {
-jobReference : JobReference
-numberOfVacancies : NumberOfVacancies
-jobFunction : JobFunction
-contractType : ContractType
-mode : Mode
-address : Address
-companyName : Customer
-description :Description
-registrationDate : Calendar
-recruitmentProcess : RecruitmentProcess
-requirementsPlugin : Plugin
-interviewPlugin :Plugin

+jobReference() :JobReference
+jobFunction() : JobFunction
+contractType() : ContractType
+mode() : Mode
+address() : Address
+companyName() : Customer
+description() : Description
+registrationDate() : Calendar
+setId(JobReference jobReference)
+recruitmentProcess() : RecruitmentProcess
+requirementsPlugin() : Plugin
+interviewPlugin() : Plugin
}

class JobFunction{
-jobDescription : String
}

class NumberOfVacancies{
-number : Integer
}

class Description{
-description : String
}

class JobReference{
-jobReference : Integer
+jobReference() : Integer
}

class Address{
-street : String
-city : String
-state : String
-country : String
-zipcode : String

-validateZipcode(zipcode) : Boolean
}

class Address{}

class Customer{
-systemUser : SystemUser
-code : Code
-address : Address
-customerManager : SystemUser

+user() : SystemUser
+getID() : Code
+address() : Address
+customerManagerAssociated() : SystemUser
}

class EmailAddress{
-email : String

}

class Name{
-firstName : String
-lastName : String
+firstName() : String
+lastName() : String
}

class Code{
-code : String
+getCode() : String
}


class SystemUser{
-name : Name
-email : EmailAddress

+email() : EmailAddress
+name() : Name
}

class Mode{
-modeDescription
+modeDescription()
}

class ContractType{
-contractType : String
+contractType()


}
class RegisterJobOpeningUI{
- selectMode() : String
- selectContractType() : String
- displayCustomerMenu(List<Customer> customers) : Customer

}

class PersistenceContext{
+repositories()
}

interface RepositoryFactory{
jobOpenings()
jobOpenings(TransactionalContext tx)
customers()
customers(TransactionalContext autoTx)
}

class RegisterJobOpeningController{
+registerJobOpening() : JobOpening
+filterCustomerBySystemUser() : List<Customer>
+getLastJobReference() : Integer
+generateNextJobReference(Integer lastJobReference) : Integer

}


interface CustomerRepository{
findAll()
}

interface JobOpeningRepository{
save(jobOpening)
findAll()
}

SystemUser --> Name
Customer --> Address
JobOpening --> Address
JobOpening --> Mode
JobOpening --> ContractType
JobOpening --> Customer
JobOpening --> JobFunction
JobOpening --> JobReference
JobOpening --> Description
JobOpening --> NumberOfVacancies

SystemUser --> EmailAddress
Customer --> Code
Customer --> SystemUser

RegisterJobOpeningUI ..> RegisterJobOpeningController

RegisterJobOpeningController ..> JobOpeningRepository
RegisterJobOpeningController ..> CustomerRepository

JobOpeningRepository --> "*" JobOpening :stores
CustomerRepository --> "*" Customer :stores

RegisterJobOpeningController ..> PersistenceContext

PersistenceContext --> RepositoryFactory


RepositoryFactory ..> JobOpeningRepository
RepositoryFactory  ..> CustomerRepository
@enduml