@startuml

title "US1012 - Generate Interview Model Template for Job Opening" Class Diagram

class GenerateInterviewModelController{
+allJobOpenings() : Iterable<JobOpening>
+allInterviewModel() : Iterable<Plugin>
+generateInterviewTemplate(JobOpening jobOpening)
}

class GenerateInterviewModelUI{
}

class PluginMainClassName{
-name : String
+name() : String
}

class Plugin {
-pluginID : PluginIdentifier
-pluginType : PluginType
-description : Description
-pluginMainClassName : PluginMainClassName
-jarFileName : JarFileName

+identity() : PluginIdentifier
+pluginType() : PluginType
+description() :Description
+pluginMainClassName() : PluginMainClassName
+jarFileName() : JarFileName
}

class JarFileName{
-name : String
}

class JobOpening {
-jobReference : JobReference
-numberOfVacancies : NumberOfVacancies
-jobFunction : JobFunction
-contractType : ContractType
-mode : Mode
-address : Address
-companyName : Customer
-description :Description
-registrationDate : Calendar
-recruitmentProcess : RecruitmentProcess
-interviewPlugin : Plugin
-interviewPlugin :Plugin

+jobReference() :JobReference
+jobFunction() : JobFunction
+contractType() : ContractType
+mode() : Mode
+address() : Address
+companyName() : Customer
+description() : Description
+registrationDate() : Calendar
+setId(JobReference jobReference)
+recruitmentProcess() : RecruitmentProcess
+interviewPlugin() : Plugin
+interviewPlugin() : Plugin
}

class JobFunction{
-jobDescription : String
}

class NumberOfVacancies{
-number : Integer
}

class Description{
-description : String
}

class JobReference{
-jobReference : Integer
+jobReference() : Integer
}

class Address{
-street : String
-city : String
-state : String
-country : String
-zipcode : String

-validateZipcode(zipcode) : Boolean
}

class Customer{
-systemUser : SystemUser
-code : Code
-address : Address
-customerManager : SystemUser

+user() : SystemUser
+getID() : Code
+address() : Address
+customerManagerAssociated() : SystemUser
}

class EmailAddress{
-email : String

}

class Name{
-firstName : String
-lastName : String
+firstName() : String
+lastName() : String
}

class Code{
-code : String
+getCode() : String
}


class SystemUser{
-name : Name
-email : EmailAddress

+email() : EmailAddress
+name() : Name
}

class Mode{
-modeDescription
+modeDescription()
}

class ContractType{
-contractType : String
+contractType() : String
}


class PersistenceContext{
+repositories()
}

interface RepositoryFactory{
jobOpenings()
jobOpenings(TransactionalContext tx)
}

interface JobOpeningRepository{
jobOpenings()
save(jobOpening)
}



class PluginType{
-shorthand : String
-pluginTypeName : String
+ isValid(String shorthand)
+getShorthandName() : String
+getPluginTypeName() : String
}

class PluginIdentifier{
-identifier : String
+validateIdentifier(String identifier)
}

GenerateInterviewModelUI ..> GenerateInterviewModelController
Customer --> Address
JobOpening --> Address
JobOpening --> Mode
JobOpening --> ContractType
JobOpening --> Customer
JobOpening --> JobFunction
JobOpening --> JobReference
JobOpening --> Description
JobOpening --> NumberOfVacancies
JobOpening --> Plugin

SystemUser --> EmailAddress
Customer --> Code
Customer --> SystemUser

PersistenceContext --> RepositoryFactory
SystemUser --> Name
Plugin --> PluginType
Plugin --> Description
Plugin --> PluginIdentifier
Plugin --> PluginMainClassName
Plugin --> JarFileName
 GenerateInterviewModelController ..> PersistenceContext

 GenerateInterviewModelController ..> JobOpeningRepository
RepositoryFactory ..> JobOpeningRepository
JobOpeningRepository --> "*" JobOpening : stores

@enduml